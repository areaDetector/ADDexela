# Database for the records specific to the Dexela
# Mark Rivers
# February 9, 2015

include "ADBase.template"

######################
# Setup records
######################

######################
# Binning records
######################

record(mbbo, "$(P)$(R)DEXBinningMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_BINNING_MODE")
}

record(mbbi, "$(P)$(R)DEXBinningMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_BINNING_MODE")
   field(SCAN, "I/O Intr")
}


######################
# Full-well records
######################

record(mbbo, "$(P)$(R)DEXFullWellMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_FULL_WELL_MODE")
}

record(mbbi, "$(P)$(R)DEXFullWellMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_FULL_WELL_MODE")
   field(SCAN, "I/O Intr")
}

######################
# Readout mode records
######################

record(mbbo, "$(P)$(R)DEXReadoutMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_READOUT_MODE")
   field(ZRVL, "0")
   field(ZRST, "Continuous")
   field(ONVL, "1")
   field(ONST, "Idle")
}

record(mbbi, "$(P)$(R)DEXReadoutMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_READOUT_MODE")
   field(ZRVL, "0")
   field(ZRST, "Continuous")
   field(ONVL, "1")
   field(ONST, "Idle")
   field(SCAN, "I/O Intr")
}

######################
# Software trigger records
######################

record(bo, "$(P)$(R)DEXSoftwareTrigger")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_SOFTWARE_TRIGGER")
   field(ZNAM, "Done")
   field(ONAM, "Trigger")
}


######################
# Corrections records
######################
record(waveform, "$(P)$(R)DEXCorrectionsDir")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_CORRECTIONS_DIRECTORY")
    field(FTVL, "CHAR")
    field(NELM, "256")
}


######################
# Offset correction records
######################
record(busy, "$(P)$(R)DEXAcquireOffset")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_ACQUIRE_OFFSET")
   field(ZNAM, "Done")
   field(ONAM, "Acquire")
   field(ZNAM, "Done")
   field(ZSV,  "NO_ALARM")
   field(ONAM, "Acquire")
   field(OSV,  "MINOR")
}

record(longout, "$(P)$(R)DEXNumOffsetFrames")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_NUM_OFFSET_FRAMES")
   field(LOPR, "1")
   field(HOPR, "500")
}

record(longin, "$(P)$(R)DEXCurrentOffsetFrame")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_CURRENT_OFFSET_FRAME")
   field(SCAN, "I/O Intr")
}

record(bi, "$(P)$(R)DEXOffsetAvailable")
{
   field(SCAN, "I/O Intr")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_OFFSET_AVAILABLE")
   field(ZNAM, "Not Available")
   field(ZSV,  "MINOR")
   field(ONAM, "Available")
   field(OSV,  "NO_ALARM")
}

record(bo, "$(P)$(R)DEXUseOffset")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_USE_OFFSET")
   field(ZNAM, "Disable")
   field(ONAM, "Enable")
}

record(waveform, "$(P)$(R)DEXOffsetFile")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_OFFSET_FILE")
    field(FTVL, "CHAR")
    field(NELM, "256")
}

record(bo, "$(P)$(R)DEXLoadOffsetFile")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_LOAD_OFFSET_FILE")
   field(ZNAM, "Done")
   field(ONAM, "Load")
}

record(bo, "$(P)$(R)DEXSaveOffsetFile")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_SAVE_OFFSET_FILE")
   field(ZNAM, "Done")
   field(ONAM, "Save")
}

record(longout, "$(P)$(R)DEXOffsetConstant")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_OFFSET_CONSTANT")
}

record(longin, "$(P)$(R)DEXOffsetConstant_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_OFFSET_CONSTANT")
   field(SCAN, "I/O Intr")
}


######################
# Gain correction records
######################
record(busy, "$(P)$(R)DEXAcquireGain")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_ACQUIRE_GAIN")
   field(ZNAM, "Done")
   field(ZSV,  "NO_ALARM")
   field(ONAM, "Acquire")
   field(OSV,  "MINOR")
}

record(bi, "$(P)$(R)DEXGainAvailable")
{
   field(SCAN, "I/O Intr")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_GAIN_AVAILABLE")
   field(ZNAM, "Not Available")
   field(ZSV,  "MINOR")
   field(ONAM, "Available")
   field(OSV,  "NO_ALARM")
}

record(longout, "$(P)$(R)DEXNumGainFrames")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_NUM_GAIN_FRAMES")
   field(LOPR, "1")
   field(HOPR, "500")
}

record(longin, "$(P)$(R)DEXCurrentGainFrame")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_CURRENT_GAIN_FRAME")
   field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)DEXUseGain")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_USE_GAIN")
   field(ZNAM, "Disable")
   field(ONAM, "Enable")
}

record(waveform, "$(P)$(R)DEXGainFile")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_GAIN_FILE")
    field(FTVL, "CHAR")
    field(NELM, "256")
}

record(bo, "$(P)$(R)DEXLoadGainFile")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_LOAD_GAIN_FILE")
   field(ZNAM, "Done")
   field(ONAM, "Load")
}

record(bo, "$(P)$(R)DEXSaveGainFile")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_SAVE_GAIN_FILE")
   field(ZNAM, "Done")
   field(ONAM, "Save")
}


######################
# Defect map records
######################
record(bo, "$(P)$(R)DEXUseDefectMap")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_USE_DEFECT_MAP")
   field(ZNAM, "Disable")
   field(ONAM, "Enable")
}

record(bi, "$(P)$(R)DEXDefectMapAvailable")
{
   field(SCAN, "I/O Intr")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_DEFECT_MAP_AVAILABLE")
   field(ZNAM, "Not Available")
   field(ZSV,  "MINOR")
   field(ONAM, "Available")
   field(OSV,  "NO_ALARM")
}

record(waveform, "$(P)$(R)DEXDefectMapFile")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_DEFECT_MAP_FILE")
    field(FTVL, "CHAR")
    field(NELM, "256")
}

record(bo, "$(P)$(R)DEXLoadDefectMapFile")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DEX_LOAD_DEFECT_MAP_FILE")
   field(ZNAM, "Done")
   field(ONAM, "Load")
}


